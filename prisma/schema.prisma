generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  role          Role           @default(STUDENT)
  isAdmin       Boolean        @default(false)
  savedStudents SavedStudent[]

  student Student?
  company Company?
}

model Student {
  id        Int            @id @default(autoincrement())
  user      User           @relation(fields: [userId], references: [id])
  code      String         @unique
  name      String
  bio       String?        @db.VarChar(300)
  year      String
  interests Interest[]
  saves     SavedStudent[]
  cv        String?
  linkedin  String?
  github    String?
  avatar    String?        @map("image")

  userId Int @unique
}

model Company {
  id    Int     @id @default(autoincrement())
  user  User    @relation(fields: [userId], references: [id])
  name  String
  tier  Tier
  image String?

  userId Int @unique
}

model Interest {
  name       String    @id
  interestOf Student[]
}

model SavedStudent {
  student    Student  @relation(fields: [studentId], references: [id])
  savedBy    User     @relation(fields: [savedById], references: [id])
  isSaved    Boolean  @default(false)
  createdAt  DateTime @default(now())
  isAccepted Boolean  @default(false)

  studentId Int
  savedById Int

  @@id([studentId, savedById])
}

enum Role {
  STUDENT
  COMPANY
}

enum Tier {
  DIAMOND
  GOLD
  SILVER
  BRONZE
}
